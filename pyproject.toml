[tool.poetry]
name = "invoke-databricks-wheel-tasks"
version = "0.8.0b3"
description = "Databricks Python Wheel dev tasks in a namespaced collection of tasks to enrich the Invoke CLI task runner."
authors = ["Josh Peak <neozenith.dev@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/neozenith/invoke-databricks-wheel-tasks"
repository = "https://github.com/neozenith/invoke-databricks-wheel-tasks"


[tool.poetry.dependencies]
python = "^3.8"
databricks-cli = "^0.16.4"
poetry-core = "^1.0.8"
# invoke = {url = "https://github.com/neozenith/invoke/archive/deprecate-python2.zip"}
invoke = "^1.7.1"
Jinja2 = ">=2.11.3"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
black = "^22.1.0"
isort = "^5.10.1"
pytest = "^7.0.1"
invoke-common-tasks = "^0.3.0"
mypy = "^0.941"
pytest-cov = "^3.0.0"
coverage = {extras = ["toml"], version = "^6.3.2"}
python-dotenv = "^0.21.0"
md-toc = "^8.1.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
import_heading_stdlib = "Standard Library"
import_heading_firstparty = "Our Libraries"
import_heading_thirdparty = "Third Party"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-s -vvv --strict-markers --color=yes -m \"not integration\" --cov=. --no-cov-on-fail --cov-report html --cov-report term --junitxml=test-results/junit.xml"
markers = [
  "integration: Integration tests that require an actual databricks workspace."
]

[tool.coverage.run]
omit = ["tests/*", "**/__init__.py", "**/tasks.py"]
branch = true

[tool.mypy]
pretty = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
exclude = [
  'tests/',
  'tasks\.py'
]
follow_imports = 'silent'
ignore_missing_imports = true
# Work your way up to these:
disallow_incomplete_defs = true
disallow_untyped_defs = true
strict = true
